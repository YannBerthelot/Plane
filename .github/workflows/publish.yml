name: Build and Publish

on:
  release:
    types: [published]

permissions:
  contents: write  # required for uploading release assets

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Build the package
        run: poetry build

      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish --no-interaction

      # âœ… Use pinned cache-apt-pkgs-action to install GitHub CLI without stale latest tag
      - name: Install GitHub CLI
        uses: awalsh128/cache-apt-pkgs-action@v1.4.3
        with:
          packages: gh
          version: 1.0

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Upload release assets
        run: |
          for file in dist/*; do
            gh release upload "${{ github.event.release.tag_name }}" "$file"
          done
